version: "3.7"
services:
  prometheus:
    image: prom/prometheus:v2.51.1
    ports:
      - target: 9090
        published: 9090
       
        
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor
    networks:
      - world

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 300mb
    ports:
      - target: 8080
        published: 8080
       
        
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    networks:
      - world

  pushgateway:
    image: prom/pushgateway
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 200mb
    ports:
      - target: 9091
        published: 9091
       
        
    networks:
      - world

  grafana:
    image: grafana/grafana:10.2.6
    ports:
      - target: 3000
        published: 3000
       
        
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    depends_on:
      - prometheus
      - cadvisor
    networks:
      - world
    # loki promtail
  loki:
    image: grafana/loki:2.8.11
    volumes:
      - ./loki:/etc/loki
    ports:
      - target: 3100
        published: 3100
        mode: host
         # harus host biar grafana bisa konek, kalo host log container ga ketangkep (localhost:3100)
    command: -config.file=/etc/loki/loki-config.yml
    networks:
     - world

  promtail:
    image: grafana/promtail:2.8.11-amd64
    volumes:
      - /var/log:/var/log
      - ./promtail:/etc/promtail
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
        - world
    

  dogker-postgres:
    image: postgres:14-alpine
    deploy:
      resources:
        limits:
          cpus: '0.6'
          memory: 700mb
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'admin'
      POSTGRES_PASSWORD: 'admin'
      POSTGRES_DB: 'dogker' # awalnya postgres
    ports:
      - target: 5432
        published: 5432
        # mode: 
    networks:
      - world

  pg-admin:
    image: dpage/pgadmin4:8
    deploy:
      resources:
        limits:
          cpus: '0.6'
          memory: 600mb
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@email.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_LISTEN_PORT=5050
    ports:
      - target: 5050
        published: 5050
       
        
    networks:
      - world

  rabbitmq:
    image: rabbitmq:3.13.1-management
    deploy:
      resources:
        limits:
          cpus: '0.6'
          memory: 500mb
    ports:
        - target: 5672
          published: 5672
         
          # mode: 
        - target: 15672
          published: 15672
          # mode: 
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - world

  dkron:
    image: dkron/dkron:3.2.7
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500mb
    ports:
      - target: 8080
        published: 9911
       
        
    command: agent --server --bootstrap-expect=1 --node-name=node1
    networks:
      - world


  monitor-service:
    image:  lintangbirdas/monitor-service:v1.1
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 300mb
    environment:
     - GRAFANA_APIKEY=glsa_pUIRQWbMt3iDkcwd2d0iER6UugA0JNsg_7fc06fb6
    ports: 
      - target: 9191
        published: 9191
        mode: host
    env_file:
      - monitor.env
    depends_on:
      - grafana
      - prometheus
      - dogker-postgres
      - rabbitmq
      - loki
    networks:
      - world


  container-service:
    image: lintangbirdas/container-service:v2
    deploy:
      resources:
        limits:
          cpus: '0.6'
          memory: 300mb
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      # - 8888:8888 gakbisa
      - target: 8888
        published: 8888 # gak bisa
        mode: host
        
    env_file:
      - container.env 
    depends_on:
      - rabbitmq
      - dogker-postgres
      - loki
      - monitor-service
    networks:
      - world
      

  authentications:
    image: lintangbirdas/auth-service-adam:v2
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 450mb
    ports:
      - target: 3000
        published: 3001
        mode: host
      - target: 4000
        published: 4001
        mode: host
    depends_on:
      - dogker-postgres
      - loki
    env_file:
      - ./auth.env
    networks:
      - world

  check-network:
    image: aputra/myapp-188:v3
    networks:
      - world
    ports:  
      - target: 3000
        published: 3009
        mode: host

volumes:
  pg-data:

networks:
  world:










## gak bisa yg dibawah
    # external: false
# networks:
#   dogker_overlay1:
#     # driver: overlay #gak bisa jg
#     # driver: bridge gak bisa
#     attachable: true
#     ipam:
#       config:
#         - subnet: "10.30.30.0/24"
#           # gateway: "10.0.0.1"

# # --subnet 10.0.9.0/24 \
 # --gateway 10.0.9.99 \
 # dogker_overlay1