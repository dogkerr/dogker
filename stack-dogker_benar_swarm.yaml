version: "3.9"
services:
  prometheus:
    image: prom/prometheus #v2.51.1
    networks:
      - dogker
    container_name: prometheus
    ports:
      - published: 9090
        target: 9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/prometheus.rules.yml:/etc/prometheus/prometheus.rules.yml
      - ./prometheus/alerting.yml:/etc/prometheus/alerting.yml
    depends_on:
      - cadvisor

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    networks:
      - dogker
    container_name: cadvisor
    deploy:
      resources:
        limits:
          # cpus: "0.4"
          memory: 300mb
    ports:
      - published: 8080
        target: 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    labels:
      - prometheus-job=cadvisor
    privileged: true

  pushgateway:
    image: prom/pushgateway
    networks:
      - dogker
    container_name: pushgateway
    deploy:
      resources:
        limits:
          # cpus: "0.4"
          memory: 200mb
    ports:
      - published: 9091
        target: 9091
  grafana:
    image: grafana/grafana:10.2.6
    networks:
      - dogker
    container_name: grafana
    ports:
      - published: 3000
        target: 3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    volumes: 
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
      - cadvisor
    # loki promtail
  loki:
    image: grafana/loki:2.8.11
    networks:
      - dogker
    container_name: loki 
    volumes:
      - ./loki:/etc/loki
    ports:
      - published: 3100
        target: 3100
    command: -config.file=/etc/loki/loki-config.yml

  promtail:
    image: grafana/promtail:2.8.11-amd64
    networks:
      - dogker
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - ./promtail:/etc/promtail
    command: -config.file=/etc/promtail/promtail-config.yml
  

  alert-manager: # buat alerting pas autoscaling/container down
    image: prom/alertmanager
    volumes:
      - "./alertmanager/alertmanager.yml:/alertmanager/alertmanager.yml"
    ports:
      - published: 9093
        target: 9093
    command:  --config.file=/alertmanager/alertmanager.yml

  node-exporter:
    image: prom/node-exporter
    networks:
      - dogker
    container_name: node-exporter
    ports:
      - published: 9100
        target: 9100

  postgres:
    networks:
      - dogker
    container_name: dogker-postgres
    image: postgres:14-alpine
    deploy:
      resources:
        limits:
          # cpus: "2"
          memory: 2000mb
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'admin'
      POSTGRES_PASSWORD: 'admin'
      POSTGRES_DB: 'dogker' # awalnya postgres
    ports:
      - published: 5432
        target: 5432

  pg-admin:
    image: dpage/pgadmin4:8
    deploy:
      resources:
        limits:
          # cpus: "0.6"
          memory: 600mb
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@email.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_LISTEN_PORT=5050
    # volumes:
      # -  pgadmin-data:/var/lib/pgadmin
    ports:
      - published: 5050
        target: 5050

      
  rabbitmq:
    image: rabbitmq:3.13.1-management
    networks:
      - dogker
    container_name: rabbitmq
    deploy:
      resources:
        limits:
          # cpus: "0.6"
          memory: 500mb
    ports:
      - target: 5672
        published: 5672
         
          # mode: 
      - target: 15672
        published: 15672
          # mode: 
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  dkron:
    image: dkron/dkron:4.0.0-beta5
    networks:
      - dogker
    container_name: dkron
    deploy:
      resources:
        limits:
          # cpus: "0.5"
          memory: 500mb
    volumes:
      - ./dkron_curl.sh:/curl/curl.sh
      - dkron-data:/dkron.data
    ports:
      - published: 9911
        target: 8080
    command: >
      agent --server --bootstrap-expect=1 --node-name=node1


  monitor-service:
    networks:
      - dogker
    container_name: monitor-service
    image:  lintangbirdas/monitor-service:v1.1-swarm
    deploy:
      resources:
        limits:
          # cpus: "0.4"
          memory: 300mb
    environment:
     - GRAFANA_APIKEY=glsa_l13847KT0vmVIspxnkZZG3rqDrB3Z6AD_656b8a35
    # volumes: 
    #  - ./monitor_swarm.env:/bin/.env # sama aja
    ports: 
      - published: 9191
        target: 9191
      - published: 5001
        target: 5001 # grpc
    # env_file:
      # - monitor_swarm.env
    depends_on:
      - grafana
      - prometheus
      - postgres
      - rabbitmq
      - authentications


  container-service:
    networks:
      - dogker
    container_name: container-service
    image: lintangbirdas/container-service:v2-swarm
    deploy:
      resources:
        limits:
          # cpus: '3'
          memory: 2000mb
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # - ./container_swarm.env:/bin/.env # sama aja 
    environment:
      - PG_URL=stack_dogker2_postgres:5432
      - APP_LEVEL=production
    ports:
      - published: 8888
        target: 8888
    # env_file:
      # - ./container_swarm.env 
    depends_on:
      - rabbitmq
      - postgres
      - dkron
      - authentications

  authentications:
    networks:
      - dogker
    container_name: "dogker-authentications"
    image: lintangbirdas/auth-service-adam:v2-swarm
    deploy:
      resources:
        limits:
          # cpus: "3"
          memory: 2000mb
    ports:
      - published: 3001
        target: 3000
      - published: 4001
        target: 4000
    depends_on:
      - postgres
    environment:
      -  POSTGRES_HOST=stack_dogker2_postgres
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=dogker
      - ACCESS_TOKEN_ALGORITHM=ES512
      - JWT_PRIVATE_KEY=-----BEGIN EC PRIVATE KEY-----\nMIHcAgEBBEIB7Dwpk55oVgPcVjTU5P4M5FsmBj6GGn1aMaQbjZQL4jBDKY2I34+G\nAhRoTVHowSaSpv9oKbmBqlNzcCsqInV6lpCgBwYFK4EEACOhgYkDgYYABACh3HAV\n2IUpZMb9lTu9c92TyjH6c1TUmbGyYjyLy1ith/pDGbAHPXeNL89mxvx0lswVjdhM\nwyKHpIrPt75xDrwhuADsGdjl9gVARPhI0dVf/NofonvQREkuxGtquZZJew1sxuep\neUiSiithd4Cf2+wtuv9E/D0NhqirgmtD44axzgsczA==\n-----END EC PRIVATE KEY-----\n
      - JWT_PUBLIC_KEY=-----BEGIN PUBLIC KEY-----\nMIGbMBAGByqGSM49AgEGBSuBBAAjA4GGAAQAodxwFdiFKWTG/ZU7vXPdk8ox+nNU\n1JmxsmI8i8tYrYf6QxmwBz13jS/PZsb8dJbMFY3YTMMih6SKz7e+cQ68IbgA7BnY\n5fYFQET4SNHVX/zaH6J70ERJLsRrarmWSXsNbMbnqXlIkoorYXeAn9vsLbr/RPw9\nDYaoq4JrQ+OGsc4LHMw=\n-----END PUBLIC KEY-----\n
      - REFRESH_TOKEN_ALGORITHM=HS256
      - REFRESH_TOKEN_SECRET=coX0s+/NKBQEnZMFcjtWrwYcwydOCcWHYV8Vtq2SsLjWVaGrtJBhmnJ70yD/9n74crZrEBgZEYs8XCIIERcVMSWSJGhJHQ8HimcJ9tmt8S2ZO8UVB5Mq2UzLCsCtDq8m4J9JXWk5qS5QTlIzW5t3d4m7DIqFMEikOUSp8MMgk+oXkH1stoYbXKSk8i7RJOHpPKLQRMFNOXLhv7xi+f9TEuRxFAvsjUGb4JsrxaICBf6LCXznKic4WJ0tZPLq98wW3zgxOVPjJPgDxiEAyYIZa1b/nZ0iZSJtnrCKvhamdqZkiYxW0ikZWa7TnTkGi3pZFJMqbW72VPBRl+059ZvOzA==

  
  minio:
    networks:
      - dogker
    container_name: minio
    image: quay.io/minio/minio
    ports: 
      - published: 9000
        target: 9000
      - published: 9001
        target: 9001
    environment:
      - MINIO_ROOT_USER=lintang
      - MINIO_ROOT_PASSWORD=lintang123
    user: 1000:1000
    volumes:  
      - ${HOME}/minio/data:/data
    command: server /data --console-address ":9001"



networks:
  dogker:
    driver: overlay

volumes:
  pg-data:
  dkron-data:
  grafana-data:
